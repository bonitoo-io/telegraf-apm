[agent]
  ## Default data collection interval for all inputs
  interval = "1s"
  ## Rounds collection interval to 'interval'
  ## ie, if interval="10s" then always collect on :00, :10, :20, etc.
  round_interval = true

  ## Telegraf will send metrics to outputs in batches of at most
  ## metric_batch_size metrics.
  ## This controls the size of writes that Telegraf sends to output plugins.
  metric_batch_size = 1000

  ## For failed writes, telegraf will cache metric_buffer_limit metrics for each
  ## output, and will flush this buffer on a successful write. Oldest metrics
  ## are dropped first when this buffer fills.
  ## This buffer only fills when writes fail to output plugin(s).
  metric_buffer_limit = 10000

  ## Collection jitter is used to jitter the collection by a random amount.
  ## Each plugin will sleep for a random time within jitter before collecting.
  ## This can be used to avoid many plugins querying things like sysfs at the
  ## same time, which can have a measurable effect on the system.
  collection_jitter = "0s"

  ## Default flushing interval for all outputs. Maximum flush_interval will be
  ## flush_interval + flush_jitter
  flush_interval = "10s"
  ## Jitter the flush interval by a random amount. This is primarily to avoid
  ## large write spikes for users running a large number of telegraf instances.
  ## ie, a jitter of 5s and interval 10s means flushes will happen every 10-15s
  flush_jitter = "0s"

  ## By default or when set to "0s", precision will be set to the same
  ## timestamp order as the collection interval, with the maximum being 1s.
  ##   ie, when interval = "10s", precision will be "1s"
  ##       when interval = "250ms", precision will be "1ms"
  ## Precision will NOT be used for service inputs. It is up to each individual
  ## service input to set the timestamp at the appropriate precision.
  ## Valid time units are "ns", "us" (or "Âµs"), "ms", "s".
  precision = ""

  ## Logging configuration:
  ## Run telegraf with debug log messages.
  debug = false
  ## Run telegraf in quiet mode (error log messages only).
  quiet = false
  ## Specify the log file name. The empty string means to log to stderr.
  logfile = ""

  ## Override default hostname, if empty use os.Hostname()
  hostname = ""
  ## If set to true, do no set the "host" tag in the telegraf agent.
  omit_hostname = false

[[outputs.file]]
  files = ["stdout"]

[[outputs.influxdb_v2]]
    urls = ["http://influxdb_v2:9999"]
#   urls = ["http://localhost:9999"]
   token = "my-token"
   organization = "my-org"
   bucket = "my-bucket"

# [[inputs.redis]]
#   servers = ["tcp://redis-demo:6379"]

[[inputs.apm_server]]
  service_address = ":8200"
  secret_token = "my-apm-token"
  idle_timeout  = "45s"
  read_timeout  = "30s"
  write_timeout = "30s"
  ##exclude_events = ["span", "transaction", "error"]
  ## create for measurements for each event type
  #drop_unsampled_transactions = true
  exclude_fields = [
        "exception_stacktrace*", "stacktrace*", "log_stacktrace*",
        "process_*",
        "service_language*",
        "service_runtime*",
        "service_agent_version",
        "service_framework*",
        "service_version",
        "service_agent_ephemeral_id",
        "system_architecture",
        "system_platform",
        "system_container_id",
        "span_count*",
        "context_request*",
        "context_response*",
        "context_destination*",
        "context_db_type",
        "context_db_statement",
        "sampled"
        ]
  tag_keys = ["result", "name", "transaction_type", "transaction_name", "type", "span_type", "span_subtype", "subType", "context_custom_type"]

  # Keep the aggregate basicstats of each metric passing through.
  [[aggregators.basicstats]]
    ## The period on which to flush & clear the aggregator.
    period = "30s"
    ## If true, the original metric will be dropped by the
    ## aggregator and will not get sent to the output plugins.
    drop_original = false
    ## Configures which basic stats to push as fields
    stats = ["count","min","max","mean"]
    namepass = ["apm_transaction", "apm_span"]
